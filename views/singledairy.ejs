<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>View Diary Entry</title>
  <style>
    /* General Reset */
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f4;
      overflow-x: hidden;
    }

    /* Navbar Styles */
    .navbar {
      width: 100vw;
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 15px 40px;
      background-color: #2c3e50;
      color: white;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .navbar h1 {
      font-size: 1.8em;
      font-weight: 600;
      color: #ecf0f1;
      white-space: nowrap;
    }

    .navbar ul {
      list-style: none;
      display: flex;
      gap: 20px;
      align-items: center;
      flex-wrap: wrap;
    }

    .navbar a {
      color: #ecf0f1;
      text-decoration: none;
      font-size: 1.1em;
      transition: color 0.2s ease;
      white-space: nowrap;
    }

    .navbar a:hover {
      color: #3498db;
    }

    .navbar .user-actions button {
      padding: 8px 20px;
      background-color: #3498db;
      color: white;
      border: none;
      border-radius: 20px;
      cursor: pointer;
      transition: background-color 0.2s ease;
      font-size: 1em;
      white-space: nowrap;
    }

    .navbar .user-actions button:hover {
      background-color: #2980b9;
    }

    /* Diary Entry Container */
    .diary-container {
      max-width: 90%;
      margin: 40px auto;
      padding: 30px;
      background: white;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      min-height: 80vh;
    }

    .diary-header {
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
      margin-bottom: 30px;
      padding-bottom: 20px;
      border-bottom: 1px solid #eee;
    }

    .diary-title {
      font-size: 2.5em;
      color: #2c3e50;
      margin-bottom: 10px;
    }

    .diary-meta {
      color: #7f8c8d;
      font-size: 1em;
    }

    .diary-actions {
      display: flex;
      gap: 15px;
    }

    .edit-btn, .delete-btn {
      padding: 10px 25px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-size: 1em;
      transition: all 0.3s ease;
    }

    .edit-btn {
      background-color: #3498db;
      color: white;
    }

    .edit-btn:hover {
      background-color: #2980b9;
    }

    .delete-btn {
      background-color: #e74c3c;
      color: white;
    }

    .delete-btn:hover {
      background-color: #c0392b;
    }

    .diary-content {
      font-size: 1.2em;
      line-height: 1.8;
      color: #34495e;
      white-space: pre-wrap;
    }

    /* Modal Styles */
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      z-index: 1000;
      justify-content: center;
      align-items: center;
      padding: 20px;
    }

    .modal.active {
      display: flex;
    }

    .modal-content {
      background-color: white;
      padding: 30px;
      border-radius: 8px;
      width: 90%;
      height: 90vh;
      position: relative;
      display: flex;
      flex-direction: column;
    }

    .modal-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }

    .modal-title {
      color: #2c3e50;
      font-size: 1.5em;
      font-weight: 600;
    }

    .close-modal {
      background: none;
      border: none;
      font-size: 1.5em;
      cursor: pointer;
      color: #666;
    }

    /* Edit Form Styles */
    form {
      display: flex;
      flex-direction: column;
      flex-grow: 1;
    }

    form input, form textarea {
      margin-bottom: 15px;
      padding: 15px;
      border: 1px solid #bdc3c7;
      border-radius: 4px;
      font-size: 1.1em;
    }

    form textarea {
      flex-grow: 1;
      resize: none;
      line-height: 1.6;
    }

    /* Responsive Adjustments */
    @media (max-width: 768px) {
      .navbar {
        flex-direction: column;
        padding: 15px;
        gap: 15px;
      }

      .navbar ul {
        width: 100%;
        justify-content: center;
        gap: 15px;
      }

      .diary-container {
        padding: 20px;
        margin: 20px auto;
      }

      .diary-header {
        flex-direction: column;
        gap: 20px;
      }

      .diary-actions {
        width: 100%;
        justify-content: space-between;
      }

      .diary-title {
        font-size: 2em;
      }

      .diary-content {
        font-size: 1.1em;
      }
    }
  </style>
</head>

<body>
  <!-- Navbar -->
  <nav class="navbar">
    <h1>Diary-App</h1>
    <ul>
      <% if (locals.user) { %>
        <li><a href="/api/v1/library/user/profile"><%= user.username %></a></li>
        <li><a href="/api/v1/library/user/mydiaries">My Entries</a></li>
        <li class="user-actions">
          <button onclick="window.location.href='/api/v1/user/signout'">Sign Out</button>
        </li>
      <% } %>
    </ul>
  </nav>

  <!-- Diary Entry Content -->
  <div class="diary-container">
    <div class="diary-header">
      <div>
        <h1 class="diary-title"><%= diary.title %></h1>
        <div class="diary-meta">
          Created on <%= new Date(diary.createdAt).toLocaleDateString('en-US', { 
            weekday: 'long', 
            year: 'numeric', 
            month: 'long', 
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
          }) %>
        </div>
      </div>
      <div class="diary-actions">
        <button class="edit-btn" onclick="openEditModal()">Edit Entry</button>
        <button class="delete-btn" onclick="deleteDiary()">Delete Entry</button>
      </div>
    </div>
    
    <div class="diary-content">
      <%= diary.body %>
    </div>
  </div>

  <!-- Edit Modal -->
  <div class="modal" id="editDiaryModal">
    <div class="modal-content">
      <div class="modal-header">
        <span class="modal-title">Edit Diary Entry</span>
        <button class="close-modal" onclick="closeEditModal()">&times;</button>
      </div>
      <form id="editDiaryForm">
        <input type="text" id="editTitle" name="title" value="<%= diary.title %>" required>
        <textarea id="editBody" name="body" required><%= diary.body %></textarea>
        <button type="submit">Save Changes</button>
      </form>
    </div>
  </div>

  <script>
    const modal = document.getElementById('editDiaryModal');
    const editForm = document.getElementById('editDiaryForm');

    function openEditModal() {
      modal.classList.add('active');
    }

    function closeEditModal() {
      modal.classList.remove('active');
    }

    // Close modal when clicking outside
    modal.addEventListener('click', (e) => {
      if (e.target === modal) {
        closeEditModal();
      }
    });

    // Handle edit form submission
    editForm.addEventListener('submit', async (e) => {
      e.preventDefault();

      const formData = {
        title: document.getElementById('editTitle').value,
        body: document.getElementById('editBody').value
      };

      try {
        const response = await fetch('/api/v1/dairy/<%= diary._id %>', {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(formData)
        });

        if (response.ok) {
          window.location.reload();
        } else {
          const data = await response.json();
          alert(data.message || 'Error updating diary entry');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Error updating diary entry');
      }
    });

    // Handle delete
    async function deleteDiary() {
      if (confirm('Are you sure you want to delete this diary entry? This action cannot be undone.')) {
        try {
          const response = await fetch('/api/v1/diary/<%= diary._id %>', {
            method: 'DELETE'
          });

          if (response.ok) {
            window.location.href = '/api/v1/library/user/mydiaries';
          } else {
            const data = await response.json();
            alert(data.message || 'Error deleting diary entry');
          }
        } catch (error) {
          console.error('Error:', error);
          alert('Error deleting diary entry');
        }
      }
    }
  </script>
</body>

</html>